test=matrix(1:100, ncol=10)
colnames(test)
row.names(test)
row.names(test)<-1:10
as.numeric(test)
is.numeric(row.names(test))
row.names(test)
res=list()
res[[1]]<-NULL
res[[2]]<-"1"
res
getwd()
library(Rcpp)
sourceCpp("src/bca_cpp.cpp")
da<-read.table("input.txt")
da<-read.table("input.txt")
da
mx=as.matrix(da)
mx=round(mx, digits=1)
mx
exp=mx
regulators=1
save(exp, regulators, file="examp.rda")
getwd()
load("inst/extdata/examp.rda")
ls()
rm(list=ls())
load("inst/extdata/examp.rda")
ls
ls()
class(exp)
is(exp, "matrix")
class(exp)
!is(exp, "matrix")
exp
class(exp)
source("src/bcacpp.cpp")
sourceCpp("src/bcacpp.cpp")
library(Rcpp)
sourceCpp("src/bcacpp.cpp")
settings <- getPlugin("RcppArmadillo")
settings$env$PKG_CXXFLAGS <- paste('-fopenmp', settings$env$PKG_CXXFLAGS)
settings$env$PKG_LIBS <- paste('-fopenmp -lgomp', settings$env$PKG_LIBS)
expr
laod("inst/extdata/exam.rda")
load("inst/extdata/exam.rda")
bca <- function( expr, regulators, min.pas=100, min.ges=50, cutoff=0.85, cores=1, max.ges=1000){
print(class(expr))
expr=as.matrix(expr)
patients=colnames(expr)
genes=row.names(expr)
print(1)
tfloc=regulators;
if(!is.numeric(regulators))
tfloc=which(genes %in% regulators)
print(1)
output=bcacpp(expr, tfloc, c(min.ges,max.ges, min.pas, 10, cutoff, cores))
print(2)
res=.transform(output)
print(3)
res[["para"]] <- list(patients=patients, genes=genes, tfloc=tfloc, min.pas=min.pas, min.ges=min.ges, cutoff=cutoff, cores=cores, max.ges=max.ges)
attr(res, "class") <- "bca"
return(res)
}
bca(expr, 1,10,50,0.851, 100)
ls()
rm(list=ls())
laod("inst/extdata/exam.rda")
load("inst/extdata/exam.rda")
ls()
?is
